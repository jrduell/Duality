{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jrdue\\\\Desktop\\\\Current\\\\app\\\\src\\\\dataCollecting\\\\playlists.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { catchErrors } from '../utils';\nimport { getCurrentUserPlaylists } from '../spotify';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Playlists = () => {\n  _s();\n\n  const [playlists, setPlaylists] = useState(null);\n  const [playlistsData, setPlaylistsData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const {\n        data\n      } = await getCurrentUserPlaylists();\n      setPlaylistsData(data);\n    };\n\n    catchErrors(fetchData());\n  }, []); //check for next param in playlist get request response\n\n  useEffect(() => {\n    if (!playlistsData) {\n      return;\n    } //loop through next data fields\n\n\n    const fetchNextData = async () => {\n      if (playlistsData.next) {\n        const {\n          data\n        } = await axios.get(playlistsData.next);\n        setPlaylistsData(data);\n      }\n    };\n\n    setPlaylists(playlists => [...Playlists(playlists ? playlists : []), ...playlistsData.items]);\n  });\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"test\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Playlists, \"fitn4bCNR5InWFIO7JOdYt7NV6Q=\");\n\n_c = Playlists;\n\nvar _c;\n\n$RefreshReg$(_c, \"Playlists\");","map":{"version":3,"names":["useState","useEffect","catchErrors","getCurrentUserPlaylists","axios","Playlists","playlists","setPlaylists","playlistsData","setPlaylistsData","fetchData","data","fetchNextData","next","get","items"],"sources":["C:/Users/jrdue/Desktop/Current/app/src/dataCollecting/playlists.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { catchErrors } from '../utils';\r\nimport { getCurrentUserPlaylists } from '../spotify';\r\nimport axios from 'axios';\r\n\r\nexport const Playlists = () => {\r\n    const [playlists, setPlaylists] = useState(null);\r\n    const [playlistsData, setPlaylistsData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const { data } = await getCurrentUserPlaylists();\r\n            setPlaylistsData(data);\r\n        };\r\n\r\n        catchErrors(fetchData());\r\n    }, []);\r\n\r\n    //check for next param in playlist get request response\r\n    useEffect(() => {\r\n        if (!playlistsData) { return; }\r\n\r\n        //loop through next data fields\r\n        const fetchNextData = async () => {\r\n            if (playlistsData.next) {\r\n                const { data } = await axios.get(playlistsData.next);\r\n                setPlaylistsData(data);\r\n            }\r\n        };\r\n\r\n        setPlaylists((playlists) => [\r\n            ...Playlists(playlists ? playlists : []),\r\n            ...playlistsData.items\r\n        ]);\r\n    })\r\n    return <h1>test</h1>;\r\n}"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,SAASC,uBAAT,QAAwC,YAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAC3B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,IAAD,CAAlD;EAEAC,SAAS,CAAC,MAAM;IACZ,MAAMS,SAAS,GAAG,YAAY;MAC1B,MAAM;QAAEC;MAAF,IAAW,MAAMR,uBAAuB,EAA9C;MACAM,gBAAgB,CAACE,IAAD,CAAhB;IACH,CAHD;;IAKAT,WAAW,CAACQ,SAAS,EAAV,CAAX;EACH,CAPQ,EAON,EAPM,CAAT,CAJ2B,CAa3B;;EACAT,SAAS,CAAC,MAAM;IACZ,IAAI,CAACO,aAAL,EAAoB;MAAE;IAAS,CADnB,CAGZ;;;IACA,MAAMI,aAAa,GAAG,YAAY;MAC9B,IAAIJ,aAAa,CAACK,IAAlB,EAAwB;QACpB,MAAM;UAAEF;QAAF,IAAW,MAAMP,KAAK,CAACU,GAAN,CAAUN,aAAa,CAACK,IAAxB,CAAvB;QACAJ,gBAAgB,CAACE,IAAD,CAAhB;MACH;IACJ,CALD;;IAOAJ,YAAY,CAAED,SAAD,IAAe,CACxB,GAAGD,SAAS,CAACC,SAAS,GAAGA,SAAH,GAAe,EAAzB,CADY,EAExB,GAAGE,aAAa,CAACO,KAFO,CAAhB,CAAZ;EAIH,CAfQ,CAAT;EAgBA,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CA/BM;;GAAMV,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}